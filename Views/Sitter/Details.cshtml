@model PetSitter.ViewModels.SitterDashboardVM

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>
<a asp-action="Dashboard">&#x2190; Back to list</a>


<h4>
  BookingID :         @Html.DisplayFor(model => model.bookingId)
</h4>
<hr />

<div class="wrapper">

<div class="tab">
    <button class="tablinks" onclick="openTab(event, 'tab1')" id="defaultOpen">Service Details</button>
    <button class="tablinks" onclick="openTab(event, 'tab2')">Pet Parent Details</button>
</div>

<div id="tab1" class="tabcontent">
    <dl class="row">

        <dt class="col-sm-2">
            petParent
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.petParent)

        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.startDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.startDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.endDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.endDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.review)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.review)
        </dd>
        <dt class="col-sm-2">
          Location        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.user.City)
        </dd>

    </dl>

</div>

<div id="tab2" class="tabcontent">
    <dl class="row">

        <dt class="col-sm-3">
            pet Parent
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.petParent)

        </dd>
        <dt class="col-sm-3">
            Email
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.user.Email)

        </dd>
        <dt class="col-sm-3">
            street Address
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.user.StreetAddress)

        </dd>
        <dt class="col-sm-3">
            Phone Number
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.user.PhoneNumber)

        </dd>
     
  </dl>
</div>
</div>
<style>
    .wrapper{
        left:25%;
        width:50%;
        max-width:100%;
        position:relative;
    }
.tab {
  overflow: hidden;
  border: 1px solid #ccc;
  background-color: #f1f1f1;
}

.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
  font-size: 17px;
  width:50%;
}

.tab button:hover {
  background-color: #ddd;
}

.tab button.active {
  background-color: #ccc;
}

.tabcontent {
  display: none;
  padding: 6px 12px;
  border: 1px solid #ccc;
  border-top: none;
  align-content:center;
    }</style>


<script>
function openTab(evt, tabName) {
  var i, tabcontent, tablinks;
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }
  document.getElementById(tabName).style.display = "block";
  evt.currentTarget.className += " active";
}

// Get the element with id="defaultOpen" and click on it
document.getElementById("defaultOpen").click();
</script>